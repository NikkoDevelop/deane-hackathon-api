### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Case {
  content_type: MediaTypeEnum
  createdAt: Date
  exhibitor: Exhibitor
  html_content: String
  id: Int
  is_import_substitution: Boolean
  is_moderate: Boolean
  is_published: Boolean
  moderate_message: String
  moderate_verdict: Boolean
  partner_site_url: String
  updatedAt: Date
  video_url: String
}

type Catalog {
  Exhibitor: [Exhibitor]
  categories: [Category]
  id: Int
  is_moderate: Boolean
  is_visible_cost: VisibleCostEnum
  moderate_message: String
  moderate_verdict: Boolean
  products: [Product]
}

type Category {
  catalog: Catalog
  connection_type: ConnectionTypeEnum
  createdAt: Date
  id: Int
  is_moderate: Boolean
  is_published: Boolean
  moderate_message: String
  moderate_verdict: Boolean
  name: String
  product: Product
  sub_category: Int
  updatedAt: Date
}

input ChangeEmailInput {
  newEmail: String!
  password: String!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

enum ConnectionTypeEnum {
  child
  parent
}

input CreateOneCaseInput {
  is_visible_cost: Boolean!
}

input CreateOneCatalogInput {
  is_visible_cost: VisibleCostEnum!
}

input CreateOneCategoryInput {
  name: String!
}

input CreateOneExhibitorInput {
  category: ExhibitorCategoryEnum!
  inn: String!
  meta_tags: [MetaTagsEnum]!
  name: String!
}

input CreateOneFeedbackInput {
  companyId: Int!
  rate: Int!
  text: String!
}

input CreateOneLocationInput {
  adress: String!
  cooperation_type: String!
  gps_coords: String
  name: String!
  partner_site_url: String
}

input CreateOnePartnerInput {
  name: String!
}

input CreateOneProductInput {
  analogs: String
  brand: String!
  cost: Float!
  delivery_method: [DeliveryMethodEnum]
  description: String
  manufacturer: String!
  meta_tags: [MetaTagsEnum]
  min_batch: Int
  name: String!
  payment_method: [PaymentMethodEnum]
  possibility_of_purchase: PossibilityOfPurchaseEnum
  standards: [StandardEnum]!
  type: ProductTypeEnum!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

input DeleteOneCaseInput {
  id: Int!
}

input DeleteOneCatalogInput {
  id: Int!
}

input DeleteOneCategoryInput {
  id: Int!
}

input DeleteOneExhibitorInput {
  id: Int!
}

input DeleteOneFeedbackInput {
  id: Int!
}

input DeleteOneLocationInput {
  id: Int!
}

input DeleteOnePartnerInput {
  id: Int!
}

input DeleteOneProductInput {
  id: Int!
}

enum DeliveryMethodEnum {
  cdek
  courier
  fast_courier
  mail
}

enum EntityModerationEnum {
  CaseModeration
  CatalogModeration
  CategoryModeration
  ExhibidorModeration
  FeedbackModeration
  LocationModeration
  MediaModeration
  PartnerModeration
  ProductModeration
}

enum EntityTypeEnum {
  ExhibitorLogo
  ExhibitorMainMedia
  FeedbackMedia
  PartnerMedia
  ProductMedia
  ProductVideo
}

type Exhibitor {
  cases: [Feedback]
  catalog: Catalog
  category: ExhibitorCategoryEnum
  clients: String
  company_description: String
  contact_person: String
  description: String
  email: [String]
  factory_adress: String
  id: Int
  import_substitution: String
  inn: String
  is_import_substitution: Boolean
  is_moderate: Boolean
  legal_adress: String
  location_table: String
  locations: [Feedback]
  login: String
  logo: String
  main_media: String
  meta_tags: [MetaTagsEnum]
  moderate_message: String
  moderate_verdict: Boolean
  name: String
  notification_email: String
  our_feedback: [Feedback]
  partners: [Feedback]
  partners_table: String
  password: String
  phone: String
  portfolio: String
  products: [Feedback]
  site_url: String
  us_feedback: [Feedback]
}

enum ExhibitorCategoryEnum {
  category_1
  category_2
  category_3
  category_4
  category_5
}

type Feedback {
  author: Exhibitor
  company: Exhibitor
  createdAt: Date
  id: Int
  is_moderate: Boolean
  is_published: Boolean
  medias: [Media]
  moderate_message: String
  moderate_verdict: Boolean
  rate: Int
  text: String
  updatedAt: Date
}

input GetCaseInput {
  caseId: Int!
}

input GetCasesInput {
  caseIds: [Int!]
}

input GetCatalogInput {
  catalogId: Int!
}

input GetCatalogsInput {
  catalogIds: [Int!]
}

input GetCategoriesInput {
  categoryIds: [Int!]
}

input GetCategoryInput {
  categoryId: Int!
}

input GetExhibitorInput {
  exhibitorId: Int!
}

input GetExhibitorsInput {
  exhibitorIds: [Int!]
}

input GetFeedbackInput {
  feedbackId: Int!
}

input GetFeedbacksInput {
  feedbackIds: [Int!]
}

input GetLocationInput {
  locationId: Int!
}

input GetLocationsInput {
  locationIds: [Int!]
}

input GetMediaInput {
  mediaURL: String!
}

input GetMediasInput {
  mediaURLs: [String!]
}

input GetPartnerInput {
  partnerId: Int!
}

input GetPartnersInput {
  partnerIds: [Int!]
}

input GetProductInput {
  productId: Int!
}

input GetProductsInput {
  productIds: [Int!]
}

input GetUserInput {
  login: String
  userId: Int
}

type Location {
  adress: String
  cooperation_type: String
  exhibitor: Exhibitor
  gps_coords: String
  id: Int
  is_moderate: Boolean
  is_visible: Boolean
  moderate_message: String
  moderate_verdict: Boolean
  name: String
  partner_site_url: String
}

type Media {
  createdAt: Date
  exhibitor_for_logo: [Exhibitor]
  exhibitor_for_main_logo: [Exhibitor]
  feedback: [Feedback]
  id: Int
  isApproved: Boolean
  is_moderate: Boolean
  link: String
  moderate_message: String
  moderate_verdict: Boolean
  partner: [Partner]
  product_logo: [Product]
  product_medias: [Product]
  type: MediaTypeEnum
  url: String
}

enum MediaTypeEnum {
  image
  video
}

enum MetaTagsEnum {
  Author
  Charset
  Content_type
  Copyright
  Description
  Keywords
  Refresh
  Robots
  Title
  Viewport
}

type Mutation {
  ChangeEmail(data: ChangeEmailInput!): MutationReturnedType
  ChangePassword(data: ChangePasswordInput!): MutationReturnedType
  CreateOneCase(data: CreateOneCaseInput!): MutationReturnedType
  CreateOneCatalog(data: CreateOneCatalogInput!): MutationReturnedType
  CreateOneCategory(data: CreateOneCategoryInput!): MutationReturnedType
  CreateOneExhibitor(data: CreateOneExhibitorInput!): MutationReturnedType
  CreateOneFeedback(data: CreateOneFeedbackInput!): MutationReturnedType
  CreateOneLocation(data: CreateOneLocationInput!): MutationReturnedType
  CreateOnePartner(data: CreateOnePartnerInput!): MutationReturnedType
  CreateOneProduct(data: CreateOneProductInput!): MutationReturnedType
  DeleteOneCase(data: DeleteOneCaseInput!): MutationReturnedType
  DeleteOneCatalog(data: DeleteOneCatalogInput!): MutationReturnedType
  DeleteOneCategory(data: DeleteOneCategoryInput!): MutationReturnedType
  DeleteOneExhibitor(data: DeleteOneExhibitorInput!): MutationReturnedType
  DeleteOneFeedback(data: DeleteOneFeedbackInput!): MutationReturnedType
  DeleteOneLocation(data: DeleteOneLocationInput!): MutationReturnedType
  DeleteOnePartner(data: DeleteOnePartnerInput!): MutationReturnedType
  DeleteOneProduct(data: DeleteOneProductInput!): MutationReturnedType
  SignIn(data: SignInInput!): AuthPayload
  SignUp(data: SignUpInput!): AuthPayload
  UpdateOneCase(data: UpdateOneCaseInput!): MutationReturnedType
  UpdateOneCatalog(data: UpdateOneCatalogInput!): MutationReturnedType
  UpdateOneCategory(data: UpdateOneCategoryInput!): MutationReturnedType
  UpdateOneExhibitor(data: UpdateOneExhibitorInput!): MutationReturnedType
  UpdateOneFeedback(data: UpdateOneFeedbackInput!): MutationReturnedType
  UpdateOneLocation(data: UpdateOneLocationInput!): MutationReturnedType
  UpdateOnePartner(data: UpdateOnePartnerInput!): MutationReturnedType
  UpdateOneProduct(data: UpdateOneProductInput!): MutationReturnedType
  createMedia(data: createMediaInput!): SignUrlResponse
  moderateEntity(data: verdictModerationInput!): String
}

type MutationReturnedType {
  error: String
  message: String
  statusCode: Int
}

type Partner {
  display_order: Int
  exhibitor: Exhibitor
  id: Int
  is_moderate: Boolean
  is_published: Boolean
  logo: Media
  moderate_message: String
  moderate_verdict: Boolean
  name: String
}

enum PaymentMethodEnum {
  cash
  non_cash
}

enum PossibilityOfPurchaseEnum {
  retail
  wholesale
}

type Product {
  analogs: String
  brand: String
  catalog: Catalog
  category: Category
  cost: Float
  createdAt: Date
  delivery_method: DeliveryMethodEnum
  description: String
  exhibitor: Exhibitor
  id: Int
  is_import_substitution: Boolean
  is_moderate: Boolean
  is_published: Boolean
  manufacturer: String
  medias: [Media]
  meta_tags: [MetaTagsEnum]
  min_batch: Int
  moderate_message: String
  moderate_verdict: Boolean
  name: String
  payment_method: PaymentMethodEnum
  possibility_of_purchase: PossibilityOfPurchaseEnum
  standards: StandardEnum
  type: ProductTypeEnum
  updatedAt: Date
  video: Media
}

enum ProductTypeEnum {
  product
  service
}

type Query {
  GetUser(data: GetUserInput!): User
  GetUsers: [User]
  getAllCases: [Case]
  getAllCatalogs: [Catalog]
  getAllCategories: [Category]
  getAllExhibitors: [Exhibitor]
  getAllFeedbacks: [Feedback]
  getAllLocations: [Location]
  getAllMedias: [Media]
  getAllPartners: [Partner]
  getAllProducts: [Product]
  getCaseById(data: GetCaseInput!): Case
  getCasesByIds(data: GetCasesInput!): [Case]
  getCatalogById(data: GetCatalogInput!): Catalog
  getCatalogsByIds(data: GetCatalogsInput!): [Catalog]
  getCategoryById(data: GetCategoryInput!): Category
  getCategorysByIds(data: GetCategoriesInput!): [Category]
  getExhibitorById(data: GetExhibitorInput!): Exhibitor
  getExhibitorsByIds(data: GetExhibitorsInput!): [Exhibitor]
  getFeedbackById(data: GetFeedbackInput!): Feedback
  getFeedbackByIds(data: GetFeedbacksInput!): [Feedback]
  getLocationById(data: GetLocationInput!): Location
  getLocationByIds(data: GetLocationsInput!): [Location]
  getMediaByURL(data: GetMediaInput!): Media
  getMediasByURLs(data: GetMediasInput!): [Media]
  getPartnerById(data: GetPartnerInput!): Partner
  getPartnerByIds(data: GetPartnersInput!): [Partner]
  getProductById(data: GetProductInput!): Product
  getProductByIds(data: GetProductsInput!): [Product]
  me: User
}

input SignInInput {
  login: String!
  password: String!
}

input SignUpInput {
  email: String!
  login: String!
  password: String!
}

type SignUrlResponse {
  fileName: String
  mediaId: Int
  mediaURL: String
  signedURL: String
}

enum StandardEnum {
  gost
  iso
}

input UpdateOneCaseInput {
  id: Int!
  is_visible_cost: Boolean
}

input UpdateOneCatalogInput {
  id: Int!
  is_visible_cost: VisibleCostEnum
}

input UpdateOneCategoryInput {
  connection_type: ConnectionTypeEnum
  id: Int!
  name: String
  sub_categoryId: Int
}

input UpdateOneExhibitorInput {
  category: ExhibitorCategoryEnum
  company_description: String
  contact_person: String
  description: String
  factory_adress: String
  id: Int!
  import_substitution: String
  inn: String
  is_import_substitution: Boolean
  legal_adress: String
  meta_tags: [MetaTagsEnum]
  name: String
  notification_email: String
  phone: String
  site_url: String
}

input UpdateOneFeedbackInput {
  id: Int!
  rate: Int
  text: String
}

input UpdateOneLocationInput {
  adress: String
  cooperation_type: String
  gps_coords: String
  id: Int!
  name: String
  partner_site_url: String
}

input UpdateOnePartnerInput {
  display_order: Int
  id: Int!
  name: String
}

input UpdateOneProductInput {
  analogs: String
  brand: String
  cost: Float
  delivery_method: [DeliveryMethodEnum]
  description: String
  id: Int!
  manufacturer: String
  meta_tags: [MetaTagsEnum]
  min_batch: Int
  name: String
  payment_method: [PaymentMethodEnum]
  possibility_of_purchase: PossibilityOfPurchaseEnum
  standards: [StandardEnum]
  type: ProductTypeEnum
}

type User {
  email: String
  id: Int
  login: String
  password: String
  tokenVersion: Int
}

enum VisibleCostEnum {
  no
  text_only
  yes
}

input createMediaInput {
  entityId: Int!
  entityType: EntityTypeEnum!
  fileType: String!
}

input verdictModerationInput {
  entityId: Int!
  entityType: EntityModerationEnum!
  verdict: Boolean!
  verdict_message: String
}