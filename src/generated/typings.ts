/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ChangeEmailInput: { // input type
    newEmail: string; // String!
    password: string; // String!
  }
  ChangePasswordInput: { // input type
    newPassword: string; // String!
    oldPassword: string; // String!
  }
  CreateOneCaseInput: { // input type
    is_visible_cost: boolean; // Boolean!
  }
  CreateOneCatalogInput: { // input type
    is_visible_cost: NexusGenEnums['VisibleCostEnum']; // VisibleCostEnum!
  }
  CreateOneCategoryInput: { // input type
    name: string; // String!
  }
  CreateOneExhibitorInput: { // input type
    category: NexusGenEnums['ExhibitorCategoryEnum']; // ExhibitorCategoryEnum!
    inn: string; // String!
    meta_tags: Array<NexusGenEnums['MetaTagsEnum'] | null>; // [MetaTagsEnum]!
    name: string; // String!
  }
  CreateOneFeedbackInput: { // input type
    companyId: number; // Int!
    rate: number; // Int!
    text: string; // String!
  }
  CreateOneLocationInput: { // input type
    adress: string; // String!
    cooperation_type: string; // String!
    gps_coords?: string | null; // String
    name: string; // String!
    partner_site_url?: string | null; // String
  }
  CreateOnePartnerInput: { // input type
    name: string; // String!
  }
  CreateOneProductInput: { // input type
    analogs?: string | null; // String
    brand: string; // String!
    cost: number; // Float!
    delivery_method?: Array<NexusGenEnums['DeliveryMethodEnum'] | null> | null; // [DeliveryMethodEnum]
    description?: string | null; // String
    manufacturer: string; // String!
    meta_tags?: Array<NexusGenEnums['MetaTagsEnum'] | null> | null; // [MetaTagsEnum]
    min_batch?: number | null; // Int
    name: string; // String!
    payment_method?: Array<NexusGenEnums['PaymentMethodEnum'] | null> | null; // [PaymentMethodEnum]
    possibility_of_purchase?: NexusGenEnums['PossibilityOfPurchaseEnum'] | null; // PossibilityOfPurchaseEnum
    standards: Array<NexusGenEnums['StandardEnum'] | null>; // [StandardEnum]!
    type: NexusGenEnums['ProductTypeEnum']; // ProductTypeEnum!
  }
  DeleteOneCaseInput: { // input type
    id: number; // Int!
  }
  DeleteOneCatalogInput: { // input type
    id: number; // Int!
  }
  DeleteOneCategoryInput: { // input type
    id: number; // Int!
  }
  DeleteOneExhibitorInput: { // input type
    id: number; // Int!
  }
  DeleteOneFeedbackInput: { // input type
    id: number; // Int!
  }
  DeleteOneLocationInput: { // input type
    id: number; // Int!
  }
  DeleteOnePartnerInput: { // input type
    id: number; // Int!
  }
  DeleteOneProductInput: { // input type
    id: number; // Int!
  }
  GetCaseInput: { // input type
    caseId: number; // Int!
  }
  GetCasesInput: { // input type
    caseIds?: number[] | null; // [Int!]
  }
  GetCatalogInput: { // input type
    catalogId: number; // Int!
  }
  GetCatalogsInput: { // input type
    catalogIds?: number[] | null; // [Int!]
  }
  GetCategoriesInput: { // input type
    categoryIds?: number[] | null; // [Int!]
  }
  GetCategoryInput: { // input type
    categoryId: number; // Int!
  }
  GetExhibitorInput: { // input type
    exhibitorId: number; // Int!
  }
  GetExhibitorsInput: { // input type
    exhibitorIds?: number[] | null; // [Int!]
  }
  GetFeedbackInput: { // input type
    feedbackId: number; // Int!
  }
  GetFeedbacksInput: { // input type
    feedbackIds?: number[] | null; // [Int!]
  }
  GetLocationInput: { // input type
    locationId: number; // Int!
  }
  GetLocationsInput: { // input type
    locationIds?: number[] | null; // [Int!]
  }
  GetMediaInput: { // input type
    mediaURL: string; // String!
  }
  GetMediasInput: { // input type
    mediaURLs?: string[] | null; // [String!]
  }
  GetPartnerInput: { // input type
    partnerId: number; // Int!
  }
  GetPartnersInput: { // input type
    partnerIds?: number[] | null; // [Int!]
  }
  GetProductInput: { // input type
    productId: number; // Int!
  }
  GetProductsInput: { // input type
    productIds?: number[] | null; // [Int!]
  }
  GetUserInput: { // input type
    login?: string | null; // String
    userId?: number | null; // Int
  }
  SignInInput: { // input type
    login: string; // String!
    password: string; // String!
  }
  SignUpInput: { // input type
    email: string; // String!
    login: string; // String!
    password: string; // String!
  }
  UpdateOneCaseInput: { // input type
    id: number; // Int!
    is_visible_cost?: boolean | null; // Boolean
  }
  UpdateOneCatalogInput: { // input type
    id: number; // Int!
    is_visible_cost?: NexusGenEnums['VisibleCostEnum'] | null; // VisibleCostEnum
  }
  UpdateOneCategoryInput: { // input type
    connection_type?: NexusGenEnums['ConnectionTypeEnum'] | null; // ConnectionTypeEnum
    id: number; // Int!
    name?: string | null; // String
    sub_categoryId?: number | null; // Int
  }
  UpdateOneExhibitorInput: { // input type
    category?: NexusGenEnums['ExhibitorCategoryEnum'] | null; // ExhibitorCategoryEnum
    company_description?: string | null; // String
    contact_person?: string | null; // String
    description?: string | null; // String
    factory_adress?: string | null; // String
    id: number; // Int!
    import_substitution?: string | null; // String
    inn?: string | null; // String
    is_import_substitution?: boolean | null; // Boolean
    legal_adress?: string | null; // String
    meta_tags?: Array<NexusGenEnums['MetaTagsEnum'] | null> | null; // [MetaTagsEnum]
    name?: string | null; // String
    notification_email?: string | null; // String
    phone?: string | null; // String
    site_url?: string | null; // String
  }
  UpdateOneFeedbackInput: { // input type
    id: number; // Int!
    rate?: number | null; // Int
    text?: string | null; // String
  }
  UpdateOneLocationInput: { // input type
    adress?: string | null; // String
    cooperation_type?: string | null; // String
    gps_coords?: string | null; // String
    id: number; // Int!
    name?: string | null; // String
    partner_site_url?: string | null; // String
  }
  UpdateOnePartnerInput: { // input type
    display_order?: number | null; // Int
    id: number; // Int!
    name?: string | null; // String
  }
  UpdateOneProductInput: { // input type
    analogs?: string | null; // String
    brand?: string | null; // String
    cost?: number | null; // Float
    delivery_method?: Array<NexusGenEnums['DeliveryMethodEnum'] | null> | null; // [DeliveryMethodEnum]
    description?: string | null; // String
    id: number; // Int!
    manufacturer?: string | null; // String
    meta_tags?: Array<NexusGenEnums['MetaTagsEnum'] | null> | null; // [MetaTagsEnum]
    min_batch?: number | null; // Int
    name?: string | null; // String
    payment_method?: Array<NexusGenEnums['PaymentMethodEnum'] | null> | null; // [PaymentMethodEnum]
    possibility_of_purchase?: NexusGenEnums['PossibilityOfPurchaseEnum'] | null; // PossibilityOfPurchaseEnum
    standards?: Array<NexusGenEnums['StandardEnum'] | null> | null; // [StandardEnum]
    type?: NexusGenEnums['ProductTypeEnum'] | null; // ProductTypeEnum
  }
  createMediaInput: { // input type
    entityId: number; // Int!
    entityType: NexusGenEnums['EntityTypeEnum']; // EntityTypeEnum!
    fileType: string; // String!
  }
  verdictModerationInput: { // input type
    entityId: number; // Int!
    entityType: NexusGenEnums['EntityModerationEnum']; // EntityModerationEnum!
    verdict: boolean; // Boolean!
    verdict_message?: string | null; // String
  }
}

export interface NexusGenEnums {
  ConnectionTypeEnum: "child" | "parent"
  DeliveryMethodEnum: "cdek" | "courier" | "fast_courier" | "mail"
  EntityModerationEnum: "CaseModeration" | "CatalogModeration" | "CategoryModeration" | "ExhibidorModeration" | "FeedbackModeration" | "LocationModeration" | "MediaModeration" | "PartnerModeration" | "ProductModeration"
  EntityTypeEnum: "ExhibitorLogo" | "ExhibitorMainMedia" | "FeedbackMedia" | "PartnerMedia" | "ProductMedia" | "ProductVideo"
  ExhibitorCategoryEnum: "category_1" | "category_2" | "category_3" | "category_4" | "category_5"
  MediaTypeEnum: "image" | "video"
  MetaTagsEnum: "Author" | "Charset" | "Content_type" | "Copyright" | "Description" | "Keywords" | "Refresh" | "Robots" | "Title" | "Viewport"
  PaymentMethodEnum: "cash" | "non_cash"
  PossibilityOfPurchaseEnum: "retail" | "wholesale"
  ProductTypeEnum: "product" | "service"
  StandardEnum: "gost" | "iso"
  VisibleCostEnum: "no" | "text_only" | "yes"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
}

export interface NexusGenObjects {
  AuthPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Case: { // root type
    content_type?: NexusGenEnums['MediaTypeEnum'] | null; // MediaTypeEnum
    createdAt?: NexusGenScalars['Date'] | null; // Date
    exhibitor?: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    html_content?: string | null; // String
    id?: number | null; // Int
    is_import_substitution?: boolean | null; // Boolean
    is_moderate?: boolean | null; // Boolean
    is_published?: boolean | null; // Boolean
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    partner_site_url?: string | null; // String
    updatedAt?: NexusGenScalars['Date'] | null; // Date
    video_url?: string | null; // String
  }
  Catalog: { // root type
    Exhibitor?: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    categories?: Array<NexusGenRootTypes['Category'] | null> | null; // [Category]
    id?: number | null; // Int
    is_moderate?: boolean | null; // Boolean
    is_visible_cost?: NexusGenEnums['VisibleCostEnum'] | null; // VisibleCostEnum
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    products?: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
  }
  Category: { // root type
    catalog?: NexusGenRootTypes['Catalog'] | null; // Catalog
    connection_type?: NexusGenEnums['ConnectionTypeEnum'] | null; // ConnectionTypeEnum
    createdAt?: NexusGenScalars['Date'] | null; // Date
    id?: number | null; // Int
    is_moderate?: boolean | null; // Boolean
    is_published?: boolean | null; // Boolean
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    name?: string | null; // String
    product?: NexusGenRootTypes['Product'] | null; // Product
    sub_category?: number | null; // Int
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  Exhibitor: { // root type
    cases?: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    catalog?: NexusGenRootTypes['Catalog'] | null; // Catalog
    category?: NexusGenEnums['ExhibitorCategoryEnum'] | null; // ExhibitorCategoryEnum
    clients?: string | null; // String
    company_description?: string | null; // String
    contact_person?: string | null; // String
    description?: string | null; // String
    email?: Array<string | null> | null; // [String]
    factory_adress?: string | null; // String
    id?: number | null; // Int
    import_substitution?: string | null; // String
    inn?: string | null; // String
    is_import_substitution?: boolean | null; // Boolean
    is_moderate?: boolean | null; // Boolean
    legal_adress?: string | null; // String
    location_table?: string | null; // String
    locations?: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    login?: string | null; // String
    logo?: string | null; // String
    main_media?: string | null; // String
    meta_tags?: Array<NexusGenEnums['MetaTagsEnum'] | null> | null; // [MetaTagsEnum]
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    name?: string | null; // String
    notification_email?: string | null; // String
    our_feedback?: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    partners?: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    partners_table?: string | null; // String
    password?: string | null; // String
    phone?: string | null; // String
    portfolio?: string | null; // String
    products?: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    site_url?: string | null; // String
    us_feedback?: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
  }
  Feedback: { // root type
    author?: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    company?: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    createdAt?: NexusGenScalars['Date'] | null; // Date
    id?: number | null; // Int
    is_moderate?: boolean | null; // Boolean
    is_published?: boolean | null; // Boolean
    medias?: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    rate?: number | null; // Int
    text?: string | null; // String
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  Location: { // root type
    adress?: string | null; // String
    cooperation_type?: string | null; // String
    exhibitor?: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    gps_coords?: string | null; // String
    id?: number | null; // Int
    is_moderate?: boolean | null; // Boolean
    is_visible?: boolean | null; // Boolean
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    name?: string | null; // String
    partner_site_url?: string | null; // String
  }
  Media: { // root type
    createdAt?: NexusGenScalars['Date'] | null; // Date
    exhibitor_for_logo?: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    exhibitor_for_main_logo?: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    feedback?: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    id?: number | null; // Int
    isApproved?: boolean | null; // Boolean
    is_moderate?: boolean | null; // Boolean
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    partner?: Array<NexusGenRootTypes['Partner'] | null> | null; // [Partner]
    product_logo?: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    product_medias?: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    type?: NexusGenEnums['MediaTypeEnum'] | null; // MediaTypeEnum
    url?: string | null; // String
  }
  Mutation: {};
  MutationReturnedType: { // root type
    error?: string | null; // String
    message?: string | null; // String
    statusCode?: number | null; // Int
  }
  Partner: { // root type
    display_order?: number | null; // Int
    exhibitor?: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    id?: number | null; // Int
    is_moderate?: boolean | null; // Boolean
    is_published?: boolean | null; // Boolean
    logo?: NexusGenRootTypes['Media'] | null; // Media
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    name?: string | null; // String
  }
  Product: { // root type
    analogs?: string | null; // String
    brand?: string | null; // String
    catalog?: NexusGenRootTypes['Catalog'] | null; // Catalog
    category?: NexusGenRootTypes['Category'] | null; // Category
    cost?: number | null; // Float
    createdAt?: NexusGenScalars['Date'] | null; // Date
    delivery_method?: NexusGenEnums['DeliveryMethodEnum'] | null; // DeliveryMethodEnum
    description?: string | null; // String
    exhibitor?: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    id?: number | null; // Int
    is_import_substitution?: boolean | null; // Boolean
    is_moderate?: boolean | null; // Boolean
    is_published?: boolean | null; // Boolean
    manufacturer?: string | null; // String
    medias?: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    meta_tags?: Array<NexusGenEnums['MetaTagsEnum'] | null> | null; // [MetaTagsEnum]
    min_batch?: number | null; // Int
    moderate_message?: string | null; // String
    moderate_verdict?: boolean | null; // Boolean
    name?: string | null; // String
    payment_method?: NexusGenEnums['PaymentMethodEnum'] | null; // PaymentMethodEnum
    possibility_of_purchase?: NexusGenEnums['PossibilityOfPurchaseEnum'] | null; // PossibilityOfPurchaseEnum
    standards?: NexusGenEnums['StandardEnum'] | null; // StandardEnum
    type?: NexusGenEnums['ProductTypeEnum'] | null; // ProductTypeEnum
    updatedAt?: NexusGenScalars['Date'] | null; // Date
    video?: NexusGenRootTypes['Media'] | null; // Media
  }
  Query: {};
  SignUrlResponse: { // root type
    fileName?: string | null; // String
    mediaId?: number | null; // Int
    mediaURL?: string | null; // String
    signedURL?: string | null; // String
  }
  User: { // root type
    email?: string | null; // String
    id?: number | null; // Int
    login?: string | null; // String
    password?: string | null; // String
    tokenVersion?: number | null; // Int
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  Case: { // field return type
    content_type: NexusGenEnums['MediaTypeEnum'] | null; // MediaTypeEnum
    createdAt: NexusGenScalars['Date'] | null; // Date
    exhibitor: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    html_content: string | null; // String
    id: number | null; // Int
    is_import_substitution: boolean | null; // Boolean
    is_moderate: boolean | null; // Boolean
    is_published: boolean | null; // Boolean
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    partner_site_url: string | null; // String
    updatedAt: NexusGenScalars['Date'] | null; // Date
    video_url: string | null; // String
  }
  Catalog: { // field return type
    Exhibitor: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    categories: Array<NexusGenRootTypes['Category'] | null> | null; // [Category]
    id: number | null; // Int
    is_moderate: boolean | null; // Boolean
    is_visible_cost: NexusGenEnums['VisibleCostEnum'] | null; // VisibleCostEnum
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
  }
  Category: { // field return type
    catalog: NexusGenRootTypes['Catalog'] | null; // Catalog
    connection_type: NexusGenEnums['ConnectionTypeEnum'] | null; // ConnectionTypeEnum
    createdAt: NexusGenScalars['Date'] | null; // Date
    id: number | null; // Int
    is_moderate: boolean | null; // Boolean
    is_published: boolean | null; // Boolean
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    name: string | null; // String
    product: NexusGenRootTypes['Product'] | null; // Product
    sub_category: number | null; // Int
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  Exhibitor: { // field return type
    cases: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    catalog: NexusGenRootTypes['Catalog'] | null; // Catalog
    category: NexusGenEnums['ExhibitorCategoryEnum'] | null; // ExhibitorCategoryEnum
    clients: string | null; // String
    company_description: string | null; // String
    contact_person: string | null; // String
    description: string | null; // String
    email: Array<string | null> | null; // [String]
    factory_adress: string | null; // String
    id: number | null; // Int
    import_substitution: string | null; // String
    inn: string | null; // String
    is_import_substitution: boolean | null; // Boolean
    is_moderate: boolean | null; // Boolean
    legal_adress: string | null; // String
    location_table: string | null; // String
    locations: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    login: string | null; // String
    logo: string | null; // String
    main_media: string | null; // String
    meta_tags: Array<NexusGenEnums['MetaTagsEnum'] | null> | null; // [MetaTagsEnum]
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    name: string | null; // String
    notification_email: string | null; // String
    our_feedback: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    partners: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    partners_table: string | null; // String
    password: string | null; // String
    phone: string | null; // String
    portfolio: string | null; // String
    products: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    site_url: string | null; // String
    us_feedback: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
  }
  Feedback: { // field return type
    author: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    company: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    createdAt: NexusGenScalars['Date'] | null; // Date
    id: number | null; // Int
    is_moderate: boolean | null; // Boolean
    is_published: boolean | null; // Boolean
    medias: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    rate: number | null; // Int
    text: string | null; // String
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  Location: { // field return type
    adress: string | null; // String
    cooperation_type: string | null; // String
    exhibitor: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    gps_coords: string | null; // String
    id: number | null; // Int
    is_moderate: boolean | null; // Boolean
    is_visible: boolean | null; // Boolean
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    name: string | null; // String
    partner_site_url: string | null; // String
  }
  Media: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    exhibitor_for_logo: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    exhibitor_for_main_logo: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    feedback: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    id: number | null; // Int
    isApproved: boolean | null; // Boolean
    is_moderate: boolean | null; // Boolean
    link: string | null; // String
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    partner: Array<NexusGenRootTypes['Partner'] | null> | null; // [Partner]
    product_logo: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    product_medias: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    type: NexusGenEnums['MediaTypeEnum'] | null; // MediaTypeEnum
    url: string | null; // String
  }
  Mutation: { // field return type
    ChangeEmail: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    ChangePassword: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOneCase: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOneCatalog: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOneCategory: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOneExhibitor: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOneFeedback: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOneLocation: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOnePartner: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    CreateOneProduct: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOneCase: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOneCatalog: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOneCategory: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOneExhibitor: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOneFeedback: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOneLocation: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOnePartner: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    DeleteOneProduct: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    SignIn: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    SignUp: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    UpdateOneCase: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    UpdateOneCatalog: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    UpdateOneCategory: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    UpdateOneExhibitor: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    UpdateOneFeedback: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    UpdateOneLocation: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    UpdateOnePartner: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    UpdateOneProduct: NexusGenRootTypes['MutationReturnedType'] | null; // MutationReturnedType
    createMedia: NexusGenRootTypes['SignUrlResponse'] | null; // SignUrlResponse
    moderateEntity: string | null; // String
  }
  MutationReturnedType: { // field return type
    error: string | null; // String
    message: string | null; // String
    statusCode: number | null; // Int
  }
  Partner: { // field return type
    display_order: number | null; // Int
    exhibitor: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    id: number | null; // Int
    is_moderate: boolean | null; // Boolean
    is_published: boolean | null; // Boolean
    logo: NexusGenRootTypes['Media'] | null; // Media
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    name: string | null; // String
  }
  Product: { // field return type
    analogs: string | null; // String
    brand: string | null; // String
    catalog: NexusGenRootTypes['Catalog'] | null; // Catalog
    category: NexusGenRootTypes['Category'] | null; // Category
    cost: number | null; // Float
    createdAt: NexusGenScalars['Date'] | null; // Date
    delivery_method: NexusGenEnums['DeliveryMethodEnum'] | null; // DeliveryMethodEnum
    description: string | null; // String
    exhibitor: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    id: number | null; // Int
    is_import_substitution: boolean | null; // Boolean
    is_moderate: boolean | null; // Boolean
    is_published: boolean | null; // Boolean
    manufacturer: string | null; // String
    medias: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    meta_tags: Array<NexusGenEnums['MetaTagsEnum'] | null> | null; // [MetaTagsEnum]
    min_batch: number | null; // Int
    moderate_message: string | null; // String
    moderate_verdict: boolean | null; // Boolean
    name: string | null; // String
    payment_method: NexusGenEnums['PaymentMethodEnum'] | null; // PaymentMethodEnum
    possibility_of_purchase: NexusGenEnums['PossibilityOfPurchaseEnum'] | null; // PossibilityOfPurchaseEnum
    standards: NexusGenEnums['StandardEnum'] | null; // StandardEnum
    type: NexusGenEnums['ProductTypeEnum'] | null; // ProductTypeEnum
    updatedAt: NexusGenScalars['Date'] | null; // Date
    video: NexusGenRootTypes['Media'] | null; // Media
  }
  Query: { // field return type
    GetUser: NexusGenRootTypes['User'] | null; // User
    GetUsers: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    getAllCases: Array<NexusGenRootTypes['Case'] | null> | null; // [Case]
    getAllCatalogs: Array<NexusGenRootTypes['Catalog'] | null> | null; // [Catalog]
    getAllCategories: Array<NexusGenRootTypes['Category'] | null> | null; // [Category]
    getAllExhibitors: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    getAllFeedbacks: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    getAllLocations: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    getAllMedias: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    getAllPartners: Array<NexusGenRootTypes['Partner'] | null> | null; // [Partner]
    getAllProducts: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    getCaseById: NexusGenRootTypes['Case'] | null; // Case
    getCasesByIds: Array<NexusGenRootTypes['Case'] | null> | null; // [Case]
    getCatalogById: NexusGenRootTypes['Catalog'] | null; // Catalog
    getCatalogsByIds: Array<NexusGenRootTypes['Catalog'] | null> | null; // [Catalog]
    getCategoryById: NexusGenRootTypes['Category'] | null; // Category
    getCategorysByIds: Array<NexusGenRootTypes['Category'] | null> | null; // [Category]
    getExhibitorById: NexusGenRootTypes['Exhibitor'] | null; // Exhibitor
    getExhibitorsByIds: Array<NexusGenRootTypes['Exhibitor'] | null> | null; // [Exhibitor]
    getFeedbackById: NexusGenRootTypes['Feedback'] | null; // Feedback
    getFeedbackByIds: Array<NexusGenRootTypes['Feedback'] | null> | null; // [Feedback]
    getLocationById: NexusGenRootTypes['Location'] | null; // Location
    getLocationByIds: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    getMediaByURL: NexusGenRootTypes['Media'] | null; // Media
    getMediasByURLs: Array<NexusGenRootTypes['Media'] | null> | null; // [Media]
    getPartnerById: NexusGenRootTypes['Partner'] | null; // Partner
    getPartnerByIds: Array<NexusGenRootTypes['Partner'] | null> | null; // [Partner]
    getProductById: NexusGenRootTypes['Product'] | null; // Product
    getProductByIds: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    me: NexusGenRootTypes['User'] | null; // User
  }
  SignUrlResponse: { // field return type
    fileName: string | null; // String
    mediaId: number | null; // Int
    mediaURL: string | null; // String
    signedURL: string | null; // String
  }
  User: { // field return type
    email: string | null; // String
    id: number | null; // Int
    login: string | null; // String
    password: string | null; // String
    tokenVersion: number | null; // Int
  }
}

export interface NexusGenFieldTypeNames {
  AuthPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  Case: { // field return type name
    content_type: 'MediaTypeEnum'
    createdAt: 'Date'
    exhibitor: 'Exhibitor'
    html_content: 'String'
    id: 'Int'
    is_import_substitution: 'Boolean'
    is_moderate: 'Boolean'
    is_published: 'Boolean'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    partner_site_url: 'String'
    updatedAt: 'Date'
    video_url: 'String'
  }
  Catalog: { // field return type name
    Exhibitor: 'Exhibitor'
    categories: 'Category'
    id: 'Int'
    is_moderate: 'Boolean'
    is_visible_cost: 'VisibleCostEnum'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    products: 'Product'
  }
  Category: { // field return type name
    catalog: 'Catalog'
    connection_type: 'ConnectionTypeEnum'
    createdAt: 'Date'
    id: 'Int'
    is_moderate: 'Boolean'
    is_published: 'Boolean'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    name: 'String'
    product: 'Product'
    sub_category: 'Int'
    updatedAt: 'Date'
  }
  Exhibitor: { // field return type name
    cases: 'Feedback'
    catalog: 'Catalog'
    category: 'ExhibitorCategoryEnum'
    clients: 'String'
    company_description: 'String'
    contact_person: 'String'
    description: 'String'
    email: 'String'
    factory_adress: 'String'
    id: 'Int'
    import_substitution: 'String'
    inn: 'String'
    is_import_substitution: 'Boolean'
    is_moderate: 'Boolean'
    legal_adress: 'String'
    location_table: 'String'
    locations: 'Feedback'
    login: 'String'
    logo: 'String'
    main_media: 'String'
    meta_tags: 'MetaTagsEnum'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    name: 'String'
    notification_email: 'String'
    our_feedback: 'Feedback'
    partners: 'Feedback'
    partners_table: 'String'
    password: 'String'
    phone: 'String'
    portfolio: 'String'
    products: 'Feedback'
    site_url: 'String'
    us_feedback: 'Feedback'
  }
  Feedback: { // field return type name
    author: 'Exhibitor'
    company: 'Exhibitor'
    createdAt: 'Date'
    id: 'Int'
    is_moderate: 'Boolean'
    is_published: 'Boolean'
    medias: 'Media'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    rate: 'Int'
    text: 'String'
    updatedAt: 'Date'
  }
  Location: { // field return type name
    adress: 'String'
    cooperation_type: 'String'
    exhibitor: 'Exhibitor'
    gps_coords: 'String'
    id: 'Int'
    is_moderate: 'Boolean'
    is_visible: 'Boolean'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    name: 'String'
    partner_site_url: 'String'
  }
  Media: { // field return type name
    createdAt: 'Date'
    exhibitor_for_logo: 'Exhibitor'
    exhibitor_for_main_logo: 'Exhibitor'
    feedback: 'Feedback'
    id: 'Int'
    isApproved: 'Boolean'
    is_moderate: 'Boolean'
    link: 'String'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    partner: 'Partner'
    product_logo: 'Product'
    product_medias: 'Product'
    type: 'MediaTypeEnum'
    url: 'String'
  }
  Mutation: { // field return type name
    ChangeEmail: 'MutationReturnedType'
    ChangePassword: 'MutationReturnedType'
    CreateOneCase: 'MutationReturnedType'
    CreateOneCatalog: 'MutationReturnedType'
    CreateOneCategory: 'MutationReturnedType'
    CreateOneExhibitor: 'MutationReturnedType'
    CreateOneFeedback: 'MutationReturnedType'
    CreateOneLocation: 'MutationReturnedType'
    CreateOnePartner: 'MutationReturnedType'
    CreateOneProduct: 'MutationReturnedType'
    DeleteOneCase: 'MutationReturnedType'
    DeleteOneCatalog: 'MutationReturnedType'
    DeleteOneCategory: 'MutationReturnedType'
    DeleteOneExhibitor: 'MutationReturnedType'
    DeleteOneFeedback: 'MutationReturnedType'
    DeleteOneLocation: 'MutationReturnedType'
    DeleteOnePartner: 'MutationReturnedType'
    DeleteOneProduct: 'MutationReturnedType'
    SignIn: 'AuthPayload'
    SignUp: 'AuthPayload'
    UpdateOneCase: 'MutationReturnedType'
    UpdateOneCatalog: 'MutationReturnedType'
    UpdateOneCategory: 'MutationReturnedType'
    UpdateOneExhibitor: 'MutationReturnedType'
    UpdateOneFeedback: 'MutationReturnedType'
    UpdateOneLocation: 'MutationReturnedType'
    UpdateOnePartner: 'MutationReturnedType'
    UpdateOneProduct: 'MutationReturnedType'
    createMedia: 'SignUrlResponse'
    moderateEntity: 'String'
  }
  MutationReturnedType: { // field return type name
    error: 'String'
    message: 'String'
    statusCode: 'Int'
  }
  Partner: { // field return type name
    display_order: 'Int'
    exhibitor: 'Exhibitor'
    id: 'Int'
    is_moderate: 'Boolean'
    is_published: 'Boolean'
    logo: 'Media'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    name: 'String'
  }
  Product: { // field return type name
    analogs: 'String'
    brand: 'String'
    catalog: 'Catalog'
    category: 'Category'
    cost: 'Float'
    createdAt: 'Date'
    delivery_method: 'DeliveryMethodEnum'
    description: 'String'
    exhibitor: 'Exhibitor'
    id: 'Int'
    is_import_substitution: 'Boolean'
    is_moderate: 'Boolean'
    is_published: 'Boolean'
    manufacturer: 'String'
    medias: 'Media'
    meta_tags: 'MetaTagsEnum'
    min_batch: 'Int'
    moderate_message: 'String'
    moderate_verdict: 'Boolean'
    name: 'String'
    payment_method: 'PaymentMethodEnum'
    possibility_of_purchase: 'PossibilityOfPurchaseEnum'
    standards: 'StandardEnum'
    type: 'ProductTypeEnum'
    updatedAt: 'Date'
    video: 'Media'
  }
  Query: { // field return type name
    GetUser: 'User'
    GetUsers: 'User'
    getAllCases: 'Case'
    getAllCatalogs: 'Catalog'
    getAllCategories: 'Category'
    getAllExhibitors: 'Exhibitor'
    getAllFeedbacks: 'Feedback'
    getAllLocations: 'Location'
    getAllMedias: 'Media'
    getAllPartners: 'Partner'
    getAllProducts: 'Product'
    getCaseById: 'Case'
    getCasesByIds: 'Case'
    getCatalogById: 'Catalog'
    getCatalogsByIds: 'Catalog'
    getCategoryById: 'Category'
    getCategorysByIds: 'Category'
    getExhibitorById: 'Exhibitor'
    getExhibitorsByIds: 'Exhibitor'
    getFeedbackById: 'Feedback'
    getFeedbackByIds: 'Feedback'
    getLocationById: 'Location'
    getLocationByIds: 'Location'
    getMediaByURL: 'Media'
    getMediasByURLs: 'Media'
    getPartnerById: 'Partner'
    getPartnerByIds: 'Partner'
    getProductById: 'Product'
    getProductByIds: 'Product'
    me: 'User'
  }
  SignUrlResponse: { // field return type name
    fileName: 'String'
    mediaId: 'Int'
    mediaURL: 'String'
    signedURL: 'String'
  }
  User: { // field return type name
    email: 'String'
    id: 'Int'
    login: 'String'
    password: 'String'
    tokenVersion: 'Int'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    ChangeEmail: { // args
      data: NexusGenInputs['ChangeEmailInput']; // ChangeEmailInput!
    }
    ChangePassword: { // args
      data: NexusGenInputs['ChangePasswordInput']; // ChangePasswordInput!
    }
    CreateOneCase: { // args
      data: NexusGenInputs['CreateOneCaseInput']; // CreateOneCaseInput!
    }
    CreateOneCatalog: { // args
      data: NexusGenInputs['CreateOneCatalogInput']; // CreateOneCatalogInput!
    }
    CreateOneCategory: { // args
      data: NexusGenInputs['CreateOneCategoryInput']; // CreateOneCategoryInput!
    }
    CreateOneExhibitor: { // args
      data: NexusGenInputs['CreateOneExhibitorInput']; // CreateOneExhibitorInput!
    }
    CreateOneFeedback: { // args
      data: NexusGenInputs['CreateOneFeedbackInput']; // CreateOneFeedbackInput!
    }
    CreateOneLocation: { // args
      data: NexusGenInputs['CreateOneLocationInput']; // CreateOneLocationInput!
    }
    CreateOnePartner: { // args
      data: NexusGenInputs['CreateOnePartnerInput']; // CreateOnePartnerInput!
    }
    CreateOneProduct: { // args
      data: NexusGenInputs['CreateOneProductInput']; // CreateOneProductInput!
    }
    DeleteOneCase: { // args
      data: NexusGenInputs['DeleteOneCaseInput']; // DeleteOneCaseInput!
    }
    DeleteOneCatalog: { // args
      data: NexusGenInputs['DeleteOneCatalogInput']; // DeleteOneCatalogInput!
    }
    DeleteOneCategory: { // args
      data: NexusGenInputs['DeleteOneCategoryInput']; // DeleteOneCategoryInput!
    }
    DeleteOneExhibitor: { // args
      data: NexusGenInputs['DeleteOneExhibitorInput']; // DeleteOneExhibitorInput!
    }
    DeleteOneFeedback: { // args
      data: NexusGenInputs['DeleteOneFeedbackInput']; // DeleteOneFeedbackInput!
    }
    DeleteOneLocation: { // args
      data: NexusGenInputs['DeleteOneLocationInput']; // DeleteOneLocationInput!
    }
    DeleteOnePartner: { // args
      data: NexusGenInputs['DeleteOnePartnerInput']; // DeleteOnePartnerInput!
    }
    DeleteOneProduct: { // args
      data: NexusGenInputs['DeleteOneProductInput']; // DeleteOneProductInput!
    }
    SignIn: { // args
      data: NexusGenInputs['SignInInput']; // SignInInput!
    }
    SignUp: { // args
      data: NexusGenInputs['SignUpInput']; // SignUpInput!
    }
    UpdateOneCase: { // args
      data: NexusGenInputs['UpdateOneCaseInput']; // UpdateOneCaseInput!
    }
    UpdateOneCatalog: { // args
      data: NexusGenInputs['UpdateOneCatalogInput']; // UpdateOneCatalogInput!
    }
    UpdateOneCategory: { // args
      data: NexusGenInputs['UpdateOneCategoryInput']; // UpdateOneCategoryInput!
    }
    UpdateOneExhibitor: { // args
      data: NexusGenInputs['UpdateOneExhibitorInput']; // UpdateOneExhibitorInput!
    }
    UpdateOneFeedback: { // args
      data: NexusGenInputs['UpdateOneFeedbackInput']; // UpdateOneFeedbackInput!
    }
    UpdateOneLocation: { // args
      data: NexusGenInputs['UpdateOneLocationInput']; // UpdateOneLocationInput!
    }
    UpdateOnePartner: { // args
      data: NexusGenInputs['UpdateOnePartnerInput']; // UpdateOnePartnerInput!
    }
    UpdateOneProduct: { // args
      data: NexusGenInputs['UpdateOneProductInput']; // UpdateOneProductInput!
    }
    createMedia: { // args
      data: NexusGenInputs['createMediaInput']; // createMediaInput!
    }
    moderateEntity: { // args
      data: NexusGenInputs['verdictModerationInput']; // verdictModerationInput!
    }
  }
  Query: {
    GetUser: { // args
      data: NexusGenInputs['GetUserInput']; // GetUserInput!
    }
    getCaseById: { // args
      data: NexusGenInputs['GetCaseInput']; // GetCaseInput!
    }
    getCasesByIds: { // args
      data: NexusGenInputs['GetCasesInput']; // GetCasesInput!
    }
    getCatalogById: { // args
      data: NexusGenInputs['GetCatalogInput']; // GetCatalogInput!
    }
    getCatalogsByIds: { // args
      data: NexusGenInputs['GetCatalogsInput']; // GetCatalogsInput!
    }
    getCategoryById: { // args
      data: NexusGenInputs['GetCategoryInput']; // GetCategoryInput!
    }
    getCategorysByIds: { // args
      data: NexusGenInputs['GetCategoriesInput']; // GetCategoriesInput!
    }
    getExhibitorById: { // args
      data: NexusGenInputs['GetExhibitorInput']; // GetExhibitorInput!
    }
    getExhibitorsByIds: { // args
      data: NexusGenInputs['GetExhibitorsInput']; // GetExhibitorsInput!
    }
    getFeedbackById: { // args
      data: NexusGenInputs['GetFeedbackInput']; // GetFeedbackInput!
    }
    getFeedbackByIds: { // args
      data: NexusGenInputs['GetFeedbacksInput']; // GetFeedbacksInput!
    }
    getLocationById: { // args
      data: NexusGenInputs['GetLocationInput']; // GetLocationInput!
    }
    getLocationByIds: { // args
      data: NexusGenInputs['GetLocationsInput']; // GetLocationsInput!
    }
    getMediaByURL: { // args
      data: NexusGenInputs['GetMediaInput']; // GetMediaInput!
    }
    getMediasByURLs: { // args
      data: NexusGenInputs['GetMediasInput']; // GetMediasInput!
    }
    getPartnerById: { // args
      data: NexusGenInputs['GetPartnerInput']; // GetPartnerInput!
    }
    getPartnerByIds: { // args
      data: NexusGenInputs['GetPartnersInput']; // GetPartnersInput!
    }
    getProductById: { // args
      data: NexusGenInputs['GetProductInput']; // GetProductInput!
    }
    getProductByIds: { // args
      data: NexusGenInputs['GetProductsInput']; // GetProductsInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}